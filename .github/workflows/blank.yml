# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019 # windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2
      
      - name: configure remote desktop
        shell: powershell
        run: |
          #disable firewall
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
    
          #netsh int tcp set global ecncapability=disabled
          netsh interface tcp set global autotuninglevel=disabled
          netsh interface tcp show global
          
          #New-ItemProperty -Name bEnumerateHWBeforeSW -PropertyType DWord -Value 1 -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\"Windows NT"\"Terminal Services"
          #Get-ItemProperty -Name bEnumerateHWBeforeSW -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\"Windows NT"\"Terminal Services"
          
          New-ItemProperty -Name DWMFRAMEINTERVAL -PropertyType DWord -Value 15 -Path Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\"Terminal Server"\WinStations
          Get-ItemProperty -Name DWMFRAMEINTERVAL -Path Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\"Terminal Server"\WinStations
          
          echo ${env:PATH}
          whoami
          Get-LocalUser
          $UserName = "runneradmin"
          $Password = "${{ secrets.PASSWD }}"
          $Password = ConvertTo-SecureString $Password -AsPlainText -Force
          $UserAccount = Get-LocalUser -Name $UserName
          $UserAccount | Set-LocalUser -Password $Password
          
          taskkill /im explorer.exe /f
          start "C:\WINDOWS\explorer.exe"
          
      - name: start remote desktop
        shell: powershell
        run: |
          (gwmi -class win32_terminalservicesetting -namespace "root\cimv2\terminalservices").setallowtsconnections(1)
          Get-NetFirewallRule -Name RemoteDesktop* | select DisplayName,Direction,Enabled 
          Get-NetFirewallRule -Name RemoteDesktop* | Set-NetFirewallRule -Enabled true

      - name: start sshd and sleep
        shell: powershell
        run: |      
          Set-Service -Name wuauserv -StartupType Manual
          Start-Service -name wuauserv
          Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'
          Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
          Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
          Start-Service sshd
          Set-Service -Name sshd -StartupType 'Automatic'
          Get-NetFirewallRule -Name *ssh*
          New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
          Get-NetFirewallRule -Name *ssh*
          
          $file_url = "https://github.com/cloudflare/cloudflared/releases/download/2024.11.1/cloudflared-windows-amd64.exe"
          $file_name = "cloudflared-windows-amd64.exe"
          Invoke-WebRequest -Uri $file_url -OutFile $file_name 
          #.\cloudflared-windows-amd64.exe tunnel  --url localhost:3389
          .\cloudflared-windows-amd64.exe service install eyJhIjoiM2ZhNjU5ZTcyMGQwOWY1NTU3NzhiNjU0YTczYTk2NGIiLCJ0IjoiNThlNDE1MTEtOTU2YS00MDQ4LWI4NTUtMDYwNDE3MWI1MzRjIiwicyI6Ik9HRXlNR0psWm1FdE9UaGlOaTAwTVdNM0xUa3haVGt0Wm1JMU5EQmxaR1k0Wm1JNCJ9
          
          cd "C:\Program Files (x86)\Microsoft\Edge\Application"
          .\msedge.exe
         
          #sleep can not put in a new task, because this task which has sart-job can not be end
          sleep 19800
